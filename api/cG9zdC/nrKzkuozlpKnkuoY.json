{"title":"第二天了","date":"2018-07-01T13:10:58.000Z","excerpt":"<p>Bin以及ob部分基础介绍<br>","slug":"第二天了","updated":"2018-07-03T09:21:45.380Z","content":"<p>Bin以及ob部分基础介绍<br><a id=\"more\"></a></p>\n<h1 id=\"BIN\"><a href=\"#BIN\" class=\"headerlink\" title=\"BIN\"></a>BIN</h1><p>介绍了其定义和特点，主要难度较大所以一定是要根据自己的兴趣合理选择并且坚持进行下去</p>\n<h2 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h2><h2 id=\"RE-即逆向工程\"><a href=\"#RE-即逆向工程\" class=\"headerlink\" title=\"RE 即逆向工程\"></a>RE 即逆向工程</h2><p>分为攻和防</p>\n<h3 id=\"攻\"><a href=\"#攻\" class=\"headerlink\" title=\"攻\"></a>攻</h3><p>指软件分析技术，具体包括恶意程序分析，破解盗版，打补丁，漏洞挖掘等</p>\n<h3 id=\"防\"><a href=\"#防\" class=\"headerlink\" title=\"防\"></a>防</h3><p>指软件保护技术，具体包括代码混淆，代码虚拟化，代码扁平化等</p>\n<h2 id=\"PWN\"><a href=\"#PWN\" class=\"headerlink\" title=\"PWN\"></a>PWN</h2><h3 id=\"软件漏洞\"><a href=\"#软件漏洞\" class=\"headerlink\" title=\"软件漏洞\"></a>软件漏洞</h3><p>挖掘-&gt;分析-&gt;利用-&gt;修补</p>\n<h3 id=\"漏洞类型\"><a href=\"#漏洞类型\" class=\"headerlink\" title=\"漏洞类型\"></a>漏洞类型</h3><p>缓冲区溢出，整数溢出，格式化字符串，释放后使用</p>\n<h2 id=\"资料推荐\"><a href=\"#资料推荐\" class=\"headerlink\" title=\"资料推荐\"></a>资料推荐</h2><p>*《核心原理 逆向工程》</p>\n<h1 id=\"汇编语言初探\"><a href=\"#汇编语言初探\" class=\"headerlink\" title=\"汇编语言初探\"></a>汇编语言初探</h1><h2 id=\"C语言代码-汇编指令-机器码\"><a href=\"#C语言代码-汇编指令-机器码\" class=\"headerlink\" title=\"C语言代码 汇编指令 机器码\"></a>C语言代码 汇编指令 机器码</h2><p>机器只能识别机器码，C语言代码通过汇编指令转化成机器码</p>\n<h2 id=\"数值表示\"><a href=\"#数值表示\" class=\"headerlink\" title=\"数值表示\"></a>数值表示</h2><h3 id=\"进制\"><a href=\"#进制\" class=\"headerlink\" title=\"进制\"></a>进制</h3><p>二进制后有标志b，十进制是标志d，十六进制是标志h<br>Eg：01010 后面没有任何标志是默认为十进制</p>\n<h3 id=\"字长\"><a href=\"#字长\" class=\"headerlink\" title=\"字长\"></a>字长</h3><p>Bit：位 </p>\n<p>Byte：字节，与char对应，一个字节占8位</p>\n<p>Word：一个Word占两个字节</p>\n<h2 id=\"寄存器\"><a href=\"#寄存器\" class=\"headerlink\" title=\"寄存器\"></a>寄存器</h2><h3 id=\"8-1-1种常用寄存器\"><a href=\"#8-1-1种常用寄存器\" class=\"headerlink\" title=\"8+1+1种常用寄存器\"></a>8+1+1种常用寄存器</h3><p>EAX ECX EDX EBX ESP EBP ESI EDI 这八种可以存任何类型的东西，其中部分有其特殊使用功能</p>\n<h3 id=\"标志寄存器\"><a href=\"#标志寄存器\" class=\"headerlink\" title=\"标志寄存器\"></a>标志寄存器</h3><p>ZF  标志上次运行结果是否为0 </p>\n<h3 id=\"寻址方式\"><a href=\"#寻址方式\" class=\"headerlink\" title=\"寻址方式\"></a>寻址方式</h3><h4 id=\"立即数寻址\"><a href=\"#立即数寻址\" class=\"headerlink\" title=\"立即数寻址\"></a>立即数寻址</h4><p>MOV EAX,123H 表示将123h这个数值赋给EAX</p>\n<h4 id=\"寄存器寻址\"><a href=\"#寄存器寻址\" class=\"headerlink\" title=\"寄存器寻址\"></a>寄存器寻址</h4><p>MOV EAX,EBX 表示将EBX里的东西赋给EAX</p>\n<h3 id=\"直接寻址\"><a href=\"#直接寻址\" class=\"headerlink\" title=\"# 直接寻址\"></a># 直接寻址</h3><p>MOV EAX,[12345678h] 表示将12345678H这个地址里的内容赋给EAX</p>\n<h4 id=\"寄存器间接寻址\"><a href=\"#寄存器间接寻址\" class=\"headerlink\" title=\"寄存器间接寻址\"></a>寄存器间接寻址</h4><p>MOV EAX,[EBX] 表示将EBX里存的东西赋给EAX</p>\n<p>总结：123h直接数字则就是表示数值，[ ]相当于c语言里的&amp;，即取括号里地址所对应的值</p>\n<h2 id=\"基本指令\"><a href=\"#基本指令\" class=\"headerlink\" title=\"基本指令\"></a>基本指令</h2><h3 id=\"数据传送\"><a href=\"#数据传送\" class=\"headerlink\" title=\"数据传送\"></a>数据传送</h3><p>MOV：等同于copy，赋值 PUSH:入栈 ，POP：出栈， LEA：获取有效地址里的内容（等同于&amp;） ，等</p>\n<h3 id=\"算术运算\"><a href=\"#算术运算\" class=\"headerlink\" title=\"算术运算\"></a>算术运算</h3><p>(ADD：等同于+ ，SUB：等同于-)，(TNC，DEC)</p>\n<p>eg：ADD EAX 1 =&gt; EAX+=1</p>\n<p>INC EAX =&gt; EAX++</p>\n<p>NEG:取反，CMP：比较，MUL：乘法运算 ，等</p>\n<h3 id=\"逻辑运算\"><a href=\"#逻辑运算\" class=\"headerlink\" title=\"逻辑运算\"></a>逻辑运算</h3><p>AND OR NOT XOR TEST，等</p>\n<h1 id=\"Ollydbg\"><a href=\"#Ollydbg\" class=\"headerlink\" title=\"Ollydbg\"></a>Ollydbg</h1><p>直接将运行程序拖到代码区域即可</p>\n<h2 id=\"区域展示\"><a href=\"#区域展示\" class=\"headerlink\" title=\"区域展示\"></a>区域展示</h2><p><img src=\"https://i.imgur.com/OnP8qpx.png\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/V972yoW.png\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/nZx4Hc1.png\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/6DlJlnZ.png\" alt=\"\"></p>\n<h2 id=\"其他窗口\"><a href=\"#其他窗口\" class=\"headerlink\" title=\"其他窗口\"></a>其他窗口</h2><p>L(og):日志信息</p>\n<p>E(xecute modules):模块信息</p>\n<p>M(emory map):内存映射信息</p>\n<p>T(hreads):线程信息</p>\n<p>W(indows):窗口信息</p>\n<p>H(andles):句柄信息</p>\n<p>C:当前线程上下文</p>\n<p>K:调用链信息，等等</p>\n<h2 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h2><p><img src=\"https://i.imgur.com/RkbP8hf.png\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/Yt9yaNb.png\" alt=\"\"></p>\n<h1 id=\"找到主函数的几种方法\"><a href=\"#找到主函数的几种方法\" class=\"headerlink\" title=\"找到主函数的几种方法\"></a>找到主函数的几种方法</h1><p>1.层层递进（F8）</p>\n<p>一直重复按F8运行，当光标不在向下时说明此处是主函数或者是主函数的内部</p>\n<p>2.字符串检索法</p>\n<p>任意页面右键 -&gt; 搜索 -&gt; 智能搜索 （字符串可以检索的）</p>\n<h1 id=\"修改输出\"><a href=\"#修改输出\" class=\"headerlink\" title=\"修改输出\"></a>修改输出</h1><p>1.找到主函数</p>\n<p>2.在内存区选择Ctrl g,在弹框中输入找到的主函数的后缀的地址，确定</p>\n<p>3.选中内存区中的主函数部分，Ctrl e，在弹框中修改掉输出即可</p>\n<p>注：只能修改一次输出框，ctrl f2重新运行后结果还是原来的输出</p>\n","prev":{"title":"","slug":"~$第二天了"},"link":"/2018/07/01","toc":[{"title":"BIN","id":"BIN","index":"1","children":[{"title":"RE 即逆向工程","id":"RE-即逆向工程","index":"1.1"},{"title":"PWN","id":"PWN","index":"1.2"},{"title":"资料推荐","id":"资料推荐","index":"1.3"}]},{"title":"汇编语言初探","id":"汇编语言初探","index":"2","children":[{"title":"C语言代码 汇编指令 机器码","id":"C语言代码-汇编指令-机器码","index":"2.1"},{"title":"数值表示","id":"数值表示","index":"2.2"},{"title":"寄存器","id":"寄存器","index":"2.3"},{"title":"基本指令","id":"基本指令","index":"2.4"}]},{"title":"Ollydbg","id":"Ollydbg","index":"3","children":[{"title":"区域展示","id":"区域展示","index":"3.1"},{"title":"其他窗口","id":"其他窗口","index":"3.2"},{"title":"常用快捷键","id":"常用快捷键","index":"3.3"}]},{"title":"找到主函数的几种方法","id":"找到主函数的几种方法","index":"4"},{"title":"修改输出","id":"修改输出","index":"5"}]}