{"title":"第四天了","date":"2018-07-03T07:20:57.000Z","excerpt":"<p>swap调试以及有关栈的小知识<br>","slug":"swapp调试","updated":"2018-07-03T14:52:56.421Z","content":"<p>swap调试以及有关栈的小知识<br><a id=\"more\"></a></p>\n<h1 id=\"代码展示\"><a href=\"#代码展示\" class=\"headerlink\" title=\"代码展示\"></a>代码展示</h1><pre><code>#include&lt;stdio.h&gt;\nvoid swap(int * aa, int * bb)\n{\n    int cc = *aa;\n    *aa = *bb;\n    *bb = cc;\n}\nint main()\n{\n    int a = 1, b = 0;\n    swap(&amp;a, &amp;b);\n    printf(&quot;%d %d&quot;, a, b);\n    eturn 0;\n}\n</code></pre><h2 id=\"调试机制\"><a href=\"#调试机制\" class=\"headerlink\" title=\"调试机制\"></a>调试机制</h2><pre><code>逐语句，f11\n\n逐过程，f10\n\n区别：逐语句时，先从main函数开始，遇到被调用的函数时进入到函数内部按照语次进行\n\n     逐过程时，依然是从main函数开始，但是在遇到被调用函数时不会导函数内部去调试\n</code></pre><p>逐语句：</p>\n<p><img src=\"https://i.imgur.com/pAAdq1r.png\" alt=\"\"></p>\n<p>逐过程：</p>\n<p><img src=\"https://i.imgur.com/PIAKfYj.png\" alt=\"\"></p>\n<h1 id=\"代码过程分析\"><a href=\"#代码过程分析\" class=\"headerlink\" title=\"代码过程分析\"></a>代码过程分析</h1><p><img src=\"https://i.imgur.com/5LEdAht.png\" alt=\"\"></p>\n<pre><code>注释：* aa表示定义的指针为aa\n     *aa表示取指针aa所指向的内容\n</code></pre><h1 id=\"栈使用情况分析（利用逐语句调试分析）\"><a href=\"#栈使用情况分析（利用逐语句调试分析）\" class=\"headerlink\" title=\"栈使用情况分析（利用逐语句调试分析）\"></a>栈使用情况分析（利用逐语句调试分析）</h1><pre><code>1.将变量a，b放入栈中\n2.为变量a，b赋值\n3.将指针变量* aa，* bb放入栈中，并标明其内存储的地址所表示的变量的情况，同时将c放入栈中\n4.将c的值赋成指针aa所指向的值\n5.交换指针aa和bb所表示的值\n</code></pre><p><img src=\"https://i.imgur.com/MtLT88a.jpg\" alt=\"\"></p>\n<h1 id=\"小端序\"><a href=\"#小端序\" class=\"headerlink\" title=\"小端序\"></a>小端序</h1><pre><code>字节数据在计算机内存中存放的字节顺序\n定义：数据的高位字节存放在地址的高端 低位字节存放在地址低端\n     （数据是左边是高位，地址是右边是高位）\neg：\n   int 12345678： 一个int占四个字节，在存储时需要用小端序，即存储位置要发生调换，\n   八个数字占四个字节，所以是两两在一个组，所以存储情况为78563412\n\n   char[] 0123： 一个char只占一个字节，一个字节存储两个十六进制位，存储时不用到小端序，\n   &apos;0&apos;的ASCII码表对应的是48,48的十六进制是30，所以存储情况31323300(00是字符串后的终止符\\0）\n</code></pre><h1 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h1><p><img src=\"https://i.imgur.com/LBsAJlI.png\" alt=\"\"></p>\n<h2 id=\"栈的特性\"><a href=\"#栈的特性\" class=\"headerlink\" title=\"栈的特性\"></a>栈的特性</h2><pre><code>先进后出\n从高地址像低地址延伸\n</code></pre><h2 id=\"栈的作用\"><a href=\"#栈的作用\" class=\"headerlink\" title=\"栈的作用\"></a>栈的作用</h2><pre><code>暂时保存变量\n调用函数时传递参数\n保存函数返回地址\n</code></pre>","prev":{"title":"第五天了","slug":"第五天了"},"next":{"title":"还依旧第三天","slug":"还依旧第三天"},"link":"/2018/07/03","toc":[{"title":"代码展示","id":"代码展示","index":"1","children":[{"title":"调试机制","id":"调试机制","index":"1.1"}]},{"title":"代码过程分析","id":"代码过程分析","index":"2"},{"title":"栈使用情况分析（利用逐语句调试分析）","id":"栈使用情况分析（利用逐语句调试分析）","index":"3"},{"title":"小端序","id":"小端序","index":"4"},{"title":"栈","id":"栈","index":"5","children":[{"title":"栈的特性","id":"栈的特性","index":"5.1"},{"title":"栈的作用","id":"栈的作用","index":"5.2"}]}]}